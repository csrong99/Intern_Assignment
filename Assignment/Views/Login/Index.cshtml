@model Assignment.Models.EmployeeLoginViewModel

@{
    ViewBag.Title = "Login";
}

<!------ Include the above in your HEAD tag ---------->

@Styles.Render("~/Content/login")
@section styles {
    <style>
        .loader {
            border: 16px solid #f3f3f3;
            border-radius: 50%;
            border-top: 16px solid #3498db;
            width: 120px;
            height: 120px;
            -webkit-animation: spin 2s linear infinite; /* Safari */
            animation: spin 2s linear infinite;
        }

        /* Safari */
        @@-webkit-keyframes spin {
            0% {
                -webkit-transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
            }
        }

        @@keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }
    </style>
}

<div class="wrapper fadeInDown align-items-center">
    <div id="formContent">
        <!-- Tabs Titles -->
        <!-- Icon -->
        <div class="fadeIn first">
            <img src="~/Assets/images/pp.png" id="icon" alt="User Icon">
        </div>

        <!-- Login Form -->
        @using (Html.BeginForm("ValidateUser", "Login", FormMethod.Post,
            htmlAttributes: new { id = "loginForm", novalidate = "false", role = "form" })) {

            @Html.AntiForgeryToken()
            @Html.EditorFor(model => model.Username, new {
                htmlAttributes = new {
                @class = "fadeIn second",
                @placeholder = "username",
                @id = "username",
                @name = "username"
                }
            })
            @Html.EditorFor(model => model.Password, new {
                htmlAttributes = new {
                @class = "fadeIn third",
                @placeholder = "password",
                @id = "password",
                @name = "login"
                }
            })
            <div>
                <div>
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "form-group text-danger", @id = "validateUsername" })
                </div>
                <div>
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "form-group text-danger", @id = "validatePassword" })
                </div>
                <div>
                    <span id="error" style="color:red;"></span>
                </div>
            </div>
            <input type="submit" class="fadeIn fourth" value="Log In">
        }

        <div class="loader mx-auto" id="loader" style="display: none"></div>

        <!-- Remind Passowrd -->
        @*<div id="formFooter">
                <a class="underlineHover" href="#">Forgot Password?</a>
            </div>*@
    </div>
</div>

@section Scripts {
    <script>
        $("#username").focusin(function () {
            $("#error").text("");
        })
        $("#password").focusin(function () {
            $("#error").text("");
        })
        $(document).ajaxStart(function () {
            $("#loginForm").hide();
            $("#loader").show();
        });

        $(document).ready(function () {
            $("#loginForm").submit(function (event) {
                event.preventDefault();
                event.stopImmediatePropagation();
                if ($("#username").val().length != 0 && $("#password").val().length != 0) {
                    var action = "/Login/ValidateUser";
                    $.ajax({
                        type: "POST",
                        url: action,
                        data: {
                            username: $("#username").val(),
                            password: $("#password").val()
                        },
                        contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                        dataType: "json",
                        success: function (result) {
                            if (result.EnableError) {
                                $('#loginForm').get(0).reset();
                                $("#error").text(result.ErrorMsg);
                                $("#loader").delay(3000).hide('slow');
                                $("#loginForm").delay(3000).show('slow');
                            } else if (result.EnableSuccess) {
                                window.location.href = result.RedirectUrl;
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                        }
                    });
                }

            }); //end .submit()
        });
    </script>
}
